1 - Fundamentals
2 - Manipulating
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run? 
1
**** Start of Index Strings Demo ****
Type not empty string (q - to quit):
notemptystring
Type the character position within the string:
4
The character found at 4 position is 'm'
Type not empty string (q - to quit):
notemptystring1111
Type the character position within the string:
13
The character found at 13 position is 'g'
Type not empty string (q - to quit):
q
*** End of Indexing Strings Demo ***

*** Start of Measuring String Demo ***
Type a string (q - to quit) :
warning: this program uses gets(), which is unsafe.
measurethisstring
The length is 17
Type a string (q - to quit) :
astring
The length is 7
Type a string (q - to quit) :
q
*** End of Measuring Strings Demo ***

*** Start of Copying Strings Demo ***
Destination string is reset to empty
Type a source string (q - to quit):
sourcestring
New destination string is 'sourcestring':
Destination string is reset to empty
Type a source string (q - to quit):
source
New destination string is 'source':
Destination string is reset to empty
Type a source string (q - to quit):
q
*** End od Copying Strings Demo ***

1 - Fundamentals
2 - Manipulating
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run? 
2
*** Start of Searching Strings Demo ***
Type the string (q - to quit):
asstring
Type the substring:
ss
'ss' found at 1 position
Type the string (q - to quit):

Type the substring:

'' found at 0 position
Type the string (q - to quit):
buenosdias
Type the substring:
dias
'dias' found at 6 position
Type the string (q - to quit):
q
*** End of Seaching Strings Demo ***

1 - Fundamentals
2 - Manipulating
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run? 
3
*** Start of Converting Strings to int Demo ***
Type an int numeric string (q - to quit):
123123
Converted number is 123123
Type an int numeric string (q - to quit):
q
*** End of Converting Strings to long Demo ***

1 - Fundamentals
2 - Manipulating
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run? 
4
*** Start of Tokenizing Phrases Demo ***
Type a few phrases separated by space (q - to quit):
a few phrases
Phrase #1 is 'a'
Phrase #2 is 'few'
Phrase #3 is 'phrases'
Type a few phrases separated by space (q - to quit):
q
*** End of Tokenizing Phrases Demo ***

1 - Fundamentals
2 - Manipulating
3 - Converting
4 - Tokenizing
0 - Exit
Which module to run? 
0